-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.driver_locations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  driver_id uuid NOT NULL,
  latitude double precision NOT NULL,
  longitude double precision NOT NULL,
  accuracy double precision DEFAULT 0.0,
  speed double precision DEFAULT 0.0,
  heading double precision DEFAULT 0.0,
  timestamp timestamp with time zone DEFAULT now(),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT driver_locations_pkey PRIMARY KEY (id),
  CONSTRAINT driver_locations_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id)
);
CREATE TABLE public.driver_ratings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  driver_id uuid NOT NULL,
  rated_by uuid NOT NULL,
  trip_id uuid,
  rating numeric NOT NULL CHECK (rating >= 1::numeric AND rating <= 5::numeric),
  comment text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  metadata jsonb DEFAULT '{}'::jsonb,
  CONSTRAINT driver_ratings_pkey PRIMARY KEY (id),
  CONSTRAINT driver_ratings_rated_by_fkey FOREIGN KEY (rated_by) REFERENCES public.users(id),
  CONSTRAINT driver_ratings_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id)
);
CREATE TABLE public.driver_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  driver_id uuid,
  start_time timestamp without time zone NOT NULL,
  end_time timestamp without time zone,
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying::text, 'completed'::character varying::text, 'cancelled'::character varying::text])),
  total_distance numeric DEFAULT 0.0,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT driver_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT driver_sessions_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id)
);
CREATE TABLE public.history (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  driver_id uuid DEFAULT gen_random_uuid(),
  trip_id uuid,
  completed_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  fuel_used numeric,
  weight numeric,
  packages integer,
  delivery_receipt character varying,
  customer_rating numeric,
  notes text,
  client_name character varying,
  requested_at timestamp with time zone,
  CONSTRAINT history_pkey PRIMARY KEY (id),
  CONSTRAINT history_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id),
  CONSTRAINT history_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id)
);
CREATE TABLE public.maintenance_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  vehicle_id uuid NOT NULL,
  maintenance_date date NOT NULL,
  maintenance_type character varying NOT NULL,
  description text,
  cost numeric,
  performed_by character varying,
  next_maintenance_date date,
  status character varying DEFAULT 'Completed'::character varying,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT maintenance_history_pkey PRIMARY KEY (id),
  CONSTRAINT maintenance_history_vehicle_id_fkey FOREIGN KEY (vehicle_id) REFERENCES public.vehicles(id)
);
CREATE TABLE public.notification_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  fcm_token text NOT NULL,
  title text NOT NULL,
  body text NOT NULL,
  data jsonb DEFAULT '{}'::jsonb,
  status text DEFAULT 'sent'::text CHECK (status = ANY (ARRAY['sent'::text, 'failed'::text])),
  fcm_response jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  trip_id uuid,
  user_id uuid,
  title character varying NOT NULL,
  message text NOT NULL,
  type character varying NOT NULL,
  is_read boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.operator_notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  trip_id uuid,
  notification_type character varying NOT NULL,
  title character varying NOT NULL,
  message text NOT NULL,
  is_read boolean DEFAULT false,
  priority character varying DEFAULT 'normal'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  read_at timestamp with time zone,
  CONSTRAINT operator_notifications_pkey PRIMARY KEY (id),
  CONSTRAINT operator_notifications_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id)
);
CREATE TABLE public.push_notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  fcm_token text NOT NULL,
  title text NOT NULL,
  body text NOT NULL,
  data jsonb DEFAULT '{}'::jsonb,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'sent'::text, 'failed'::text])),
  created_at timestamp with time zone DEFAULT now(),
  processed_at timestamp with time zone,
  error_message text,
  CONSTRAINT push_notifications_pkey PRIMARY KEY (id)
);
CREATE TABLE public.schedules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  trip_id uuid,
  schedule_date date NOT NULL,
  schedule_time time without time zone,
  driver_id uuid,
  vehicle_id uuid,
  status character varying DEFAULT 'scheduled'::character varying CHECK (status::text = ANY (ARRAY['scheduled'::character varying::text, 'completed'::character varying::text, 'cancelled'::character varying::text])),
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT schedules_pkey PRIMARY KEY (id),
  CONSTRAINT schedules_vehicle_id_fkey FOREIGN KEY (vehicle_id) REFERENCES public.vehicles(id),
  CONSTRAINT schedules_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id),
  CONSTRAINT schedules_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id)
);
CREATE TABLE public.session_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  trip_id uuid,
  driver_id uuid,
  event_type character varying NOT NULL,
  description text,
  origin character varying,
  destination character varying,
  latitude double precision,
  longitude double precision,
  created_at timestamp with time zone DEFAULT now(),
  timestamp timestamp with time zone DEFAULT now(),
  CONSTRAINT session_logs_pkey PRIMARY KEY (id),
  CONSTRAINT session_logs_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id),
  CONSTRAINT session_logs_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id)
);
CREATE TABLE public.snapshots (
  id bigint NOT NULL DEFAULT nextval('snapshots_id_seq'::regclass),
  behavior_id character varying,
  driver_id uuid,
  trip_id uuid,
  event_type character varying DEFAULT 'snapshot'::character varying CHECK (event_type::text = ANY (ARRAY['snapshot'::character varying::text, 'behavior'::character varying::text])),
  behavior_type character varying NOT NULL,
  timestamp timestamp with time zone DEFAULT now(),
  source character varying DEFAULT 'iot'::character varying,
  filename character varying,
  evidence_reason text,
  confidence_score text DEFAULT 0.0,
  event_duration text DEFAULT 0.0,
  gaze_pattern text,
  face_direction text,
  eye_state text,
  driver_type character varying DEFAULT 'main'::character varying CHECK (driver_type::text = ANY (ARRAY['main'::character varying::text, 'sub'::character varying::text])),
  details jsonb,
  device_id character varying DEFAULT 'pi5-device'::character varying,
  image_data text,
  CONSTRAINT snapshots_pkey PRIMARY KEY (id),
  CONSTRAINT snapshots_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id),
  CONSTRAINT snapshots_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id)
);
CREATE TABLE public.sync_tracking (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  data_id text UNIQUE,
  data_type text NOT NULL,
  sent_to_flutter boolean DEFAULT false,
  sent_to_supabase boolean DEFAULT false,
  timestamp timestamp with time zone DEFAULT now(),
  CONSTRAINT sync_tracking_pkey PRIMARY KEY (id)
);
CREATE TABLE public.trip_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  trip_id uuid,
  trip_ref_number character varying,
  origin character varying,
  destination character varying,
  status character varying,
  archived_at timestamp with time zone DEFAULT now(),
  CONSTRAINT trip_history_pkey PRIMARY KEY (id)
);
CREATE TABLE public.trip_locations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  trip_id uuid,
  latitude double precision NOT NULL,
  longitude double precision NOT NULL,
  accuracy double precision,
  speed double precision,
  heading double precision,
  altitude double precision,
  location_type character varying DEFAULT 'current'::character varying,
  address text,
  timestamp timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  driver_id uuid,
  CONSTRAINT trip_locations_pkey PRIMARY KEY (id),
  CONSTRAINT trip_locations_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id),
  CONSTRAINT trip_locations_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id)
);
CREATE TABLE public.trip_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  trip_id uuid NOT NULL,
  driver_id uuid,
  operator_id uuid,
  event_type character varying NOT NULL CHECK (event_type::text = ANY (ARRAY['trip_started'::character varying, 'trip_completed'::character varying, 'trip_confirmed'::character varying, 'break_started'::character varying, 'break_ended'::character varying, 'compliance_alert'::character varying, 'driving_limit_warning'::character varying, 'rest_period_required'::character varying]::text[])),
  event_details jsonb DEFAULT '{}'::jsonb,
  event_timestamp timestamp with time zone NOT NULL DEFAULT now(),
  location_lat numeric,
  location_lng numeric,
  additional_data jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT trip_logs_pkey PRIMARY KEY (id),
  CONSTRAINT trip_logs_trip_id_fkey FOREIGN KEY (trip_id) REFERENCES public.trips(id),
  CONSTRAINT trip_logs_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id),
  CONSTRAINT trip_logs_operator_id_fkey FOREIGN KEY (operator_id) REFERENCES public.users(id)
);
CREATE TABLE public.trips (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  trip_ref_number character varying NOT NULL UNIQUE,
  origin character varying NOT NULL,
  destination character varying NOT NULL,
  start_time timestamp without time zone NOT NULL,
  end_time timestamp without time zone,
  priority character varying DEFAULT 'normal'::character varying CHECK (priority::text = ANY (ARRAY['low'::character varying::text, 'normal'::character varying::text, 'high'::character varying::text, 'urgent'::character varying::text])),
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying::text, 'assigned'::character varying::text, 'in_progress'::character varying::text, 'driver_completed'::character varying::text, 'completed'::character varying::text, 'cancelled'::character varying::text, 'deleted'::character varying::text, 'archived'::character varying::text])),
  driver_id uuid,
  contact_person character varying,
  contact_phone character varying,
  notes text,
  progress numeric DEFAULT 0.0 CHECK (progress >= 0::numeric AND progress <= 100::numeric),
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  sub_driver_id uuid,
  scheduled_deletion timestamp with time zone,
  canceled_at timestamp with time zone,
  deleted_at timestamp with time zone,
  vehicle_id uuid,
  confirmed_by uuid,
  operator_confirmed_at timestamp with time zone,
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  start_latitude numeric,
  start_longitude numeric,
  end_latitude numeric,
  end_longitude numeric,
  current_latitude numeric,
  current_longitude numeric,
  last_location_update timestamp with time zone,
  archived_at timestamp with time zone,
  accepted_at timestamp with time zone,
  CONSTRAINT trips_pkey PRIMARY KEY (id),
  CONSTRAINT trips_vehicle_id_fkey FOREIGN KEY (vehicle_id) REFERENCES public.vehicles(id),
  CONSTRAINT trips_confirmed_by_fkey FOREIGN KEY (confirmed_by) REFERENCES public.users(id),
  CONSTRAINT trips_sub_driver_id_fkey FOREIGN KEY (sub_driver_id) REFERENCES public.users(id),
  CONSTRAINT trips_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  middle_name character varying,
  username character varying NOT NULL UNIQUE,
  email character varying UNIQUE,
  password_hash character varying NOT NULL,
  role character varying NOT NULL CHECK (role::text = ANY (ARRAY['operator'::character varying::text, 'driver'::character varying::text])),
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying::text, 'inactive'::character varying::text])),
  contact_number character varying,
  driver_license_number character varying,
  driver_license_expiration_date date,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  profile_picture character varying,
  date_of_birth date,
  address character varying,
  driver_license_class character varying CHECK (driver_license_class IS NULL OR (driver_license_class::text = ANY (ARRAY['Pro'::character varying, 'Non-Pro'::character varying]::text[]))),
  driver_license_restrictions character varying,
  driver_license_date_issued date,
  employee_id character varying UNIQUE,
  date_hired date,
  position character varying,
  operator_id character varying UNIQUE,
  driver_id character varying UNIQUE,
  profile_image_url text,
  fcm_token text,
  notification_enabled boolean DEFAULT true,
  CONSTRAINT users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.vehicle_colors (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  hex_code character varying NOT NULL UNIQUE,
  rgb_r integer NOT NULL CHECK (rgb_r >= 0 AND rgb_r <= 255),
  rgb_g integer NOT NULL CHECK (rgb_g >= 0 AND rgb_g <= 255),
  rgb_b integer NOT NULL CHECK (rgb_b >= 0 AND rgb_b <= 255),
  is_active boolean DEFAULT true,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT vehicle_colors_pkey PRIMARY KEY (id)
);
CREATE TABLE public.vehicles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plate_number character varying NOT NULL UNIQUE,
  make character varying NOT NULL,
  model character varying NOT NULL,
  type character varying NOT NULL,
  capacity_kg numeric,
  status character varying DEFAULT 'Available'::character varying CHECK (status::text = ANY (ARRAY['Available'::character varying::text, 'Maintenance'::character varying::text, 'Out_of_service'::character varying::text])),
  last_maintenance_date date,
  next_maintenance_date date,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  color_id uuid,
  color character varying,
  CONSTRAINT vehicles_pkey PRIMARY KEY (id),
  CONSTRAINT vehicles_color_id_fkey FOREIGN KEY (color_id) REFERENCES public.vehicle_colors(id)
);